package {{apiPackage}}

///////////////////////////////////////////////////////////////
// THIS FILE IS GENERATED. DO NOT EDIT. CHANGES WILL BE LOST //
///////////////////////////////////////////////////////////////

import java.util.{Date, UUID}

import scala.util.{Failure, Success, Try}

import com.fasterxml.jackson.databind.util.ISO8601DateFormat
import org.scalatra.util.conversion.TypeConverter

object TypeConverters {

  implicit val uuidConverter = new TypeConverter[String, UUID] {
    override def apply(s: String): Option[UUID] = Try {
      UUID.fromString(s)
    } match {
      case Success(uuid) => Some(uuid)
      case Failure(ex) => None
    }
  }

  implicit val uuidsListConverter = new TypeConverter[String, List[UUID]] {
    override def apply(s: String): Option[List[UUID]] = Try {
      s.split(",").map(UUID.fromString).toList
    } match {
      case Success(uuids) => Some(uuids)
      case Failure(_) => None
    }
  }

  implicit val dateConverter = new TypeConverter[String, Date] {
    override def apply(s: String): Option[Date] = Try {
      new ISO8601DateFormat().parse(s)
    } match {
      case Success(date) => Some(date)
      case Failure(ex) => None
    }
  }
}
